#SPDX-License-Identifier: MIT-0
---
# tasks file for backend
- name: Install backend dependencies
  become: true
  community.general.npm:
    path: /opt/todo-app/todo-backend
    state: present

- name: Install PM2 Globaly
  become: true
  community.general.npm:
    name: pm2
    global: true
    state: present

- name: create a new .env file for backend
  become: true
  ansible.builtin.copy:
    dest: /opt/todo-app/todo-backend/.env
    content: |
      MONGO_URI={{ MONGO_URI }}
      PORT=3001


- name: Create PM2 ecosystem config file
  become: true
  ansible.builtin.template:
    src: ecosystem.config.js.j2
    dest: /opt/todo-app/todo-backend/ecosystem.config.js

- name: Start or reload the backend using ecosystem file
  become: true
  ansible.builtin.command: pm2 startOrReload ecosystem.config.js
  args:
    chdir: /opt/todo-app/todo-backend

- name: Get the pm2 startup command for the system
  become: true
  ansible.builtin.shell: pm2 startup | tail -n 1
  register: pm2_startup_cmd
  changed_when: false

- name: Run the pm2 startup command to register on boot
  become: true
  ansible.builtin.shell: "{{ pm2_startup_cmd.stdout }}"
  when: pm2_startup_cmd.stdout is defined and pm2_startup_cmd.stdout != ""

- name: Save the current pm2 process list to run on boot
  become: true
  ansible.builtin.command: pm2 save
  args:
    chdir: /opt/todo-app/todo-backend

  

# - name: Check is start.js exists
#   stat:
#     path: /opt/todo-app/todo-backend/start.js
#   register: start_js

# - name: Debugging start.js existence
#   debug: 
#     var: start_js.stat.exists

# - name: Check the pm2 list
#   become: true
#   command: pm2 list
#   register: pm2_list
#   changed_when: false

# - name: Debug the pm2 list
#   debug:
#     var: pm2_list.stdout_lines

# - name: Start or restart the backend
#   become: true
#   command: "pm2 start -f start.js"
#   args:
#     chdir: /opt/todo-app/todo-backend
#   when: start_js.stat.exists

# - name: Set pm2 to start on boot
#   become: true
#   command: pm2 startup
#   args:
#    chdir: /opt/todo-app/todo-backend/

# - name: Verify backend is listening on port 3001
#   become: true
#   command: "netstat -tulnp | grep 3001"
#   register: port_check
#   changed_when: false

# - name: Debug port binding
#   debug:
#     var: port_check.stdout_lines


